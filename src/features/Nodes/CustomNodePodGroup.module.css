.nodeBase {
  /* --- Базовый стиль узла PodGroup --- */
  background-color: var(--color-background-node, #ffffff);
  border: 1px solid var(--color-border-node, #d1d5da);
  border-radius: var(--border-radius-large, 8px);
  padding: calc(var(--spacing-unit) * 1.5) calc(var(--spacing-unit) * 2); 
  
  min-width: 150px;
  max-width: 250px;
  
  text-align: center;
  cursor: grab;
  
  box-shadow: var(--shadow-node-default, 0 1px 3px rgba(0,0,0,0.05), 0 1px 2px rgba(0,0,0,0.03));
  
  transition-property: background-color, border-color, box-shadow, transform;
  transition-duration: 0.15s;
  transition-timing-function: ease-in-out;
  
  position: relative;
  color: var(--color-text-primary);
  box-sizing: border-box;
  
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.nodeBase:hover {
  /* --- Состояние при наведении --- */
  border-color: var(--color-border-node-hover, var(--color-accent-light, #a4cafe));
  box-shadow: var(--shadow-node-hover, 0 4px 10px rgba(0,0,0,0.07), 0 2px 5px rgba(0,0,0,0.05));
}

.nodeBase:active {
    /* --- Состояние при нажатии/перетаскивании --- */
    cursor: grabbing;
    box-shadow: var(--shadow-node-active, inset 0 1px 2px rgba(0,0,0,0.05));
    transform: translateY(0);
}


.nodeLabel {
  /* --- Стиль для основного имени/лейбла узла --- */
  font-size: 0.98em;
  font-weight: 500;
  color: var(--color-text-primary);
  margin-bottom: calc(var(--spacing-unit) * 0.75);
  word-break: break-word;
  line-height: 1.3;
}

.statusTextBase {
  /* --- Базовый стиль для текста статуса (ошибка/предупреждение) --- */
  font-size: 0.8em;
  font-weight: 500;
  padding: calc(var(--spacing-unit) * 0.25) calc(var(--spacing-unit) * 0.75);
  border-radius: var(--border-radius-small, 4px);
  line-height: 1.2;
  margin-top: auto;
}

.errorText {
  composes: statusTextBase;
  color: var(--color-error-dark, #a71d2a);
  background-color: var(--color-error-ultralight, #ffe8e6);
}

.warningText {
  composes: statusTextBase;
  color: var(--color-warning-darker, #945800);
  background-color: var(--color-warning-ultralight, #fff8e1);
}

/* --- Состояния Узла --- */

.selectedState {
  /* --- Стиль для выделенного узла --- */
  border-color: var(--color-accent, #007AFF) !important;
  background-color: var(--color-background-node-selected, var(--color-background-node));
  box-shadow: 0 0 0 2px var(--color-accent-semitransparent, rgba(0, 122, 255, 0.35)), 
              var(--shadow-node-selected, 0 4px 12px rgba(0,0,0,0.1)) !important;
}
.selectedState .nodeLabel {
}


.errorState {
  /* --- Стиль для узла с ошибкой --- */
  border-color: var(--color-error, #e53e3e) !important;
  background-color: var(--color-background-error-light, #fff5f5);
}
.selectedState.errorState {
  /* --- Стиль для выделенного узла с ошибкой --- */
  border-color: var(--color-error, #e53e3e) !important;
  background-color: var(--color-background-error-light, #fff5f5);
  box-shadow: 0 0 0 2px var(--color-error-semitransparent, rgba(229, 62, 62, 0.35)), 
              var(--shadow-node-selected, 0 4px 12px rgba(0,0,0,0.1)) !important;
}

.warningState {
  /* --- Стиль для узла с предупреждением --- */
  border-color: var(--color-warning, #dd6b20) !important;
  background-color: var(--color-background-warning-light, #fffaf0);
}
.selectedState.warningState {
  /* --- Стиль для выделенного узла с предупреждением --- */
  border-color: var(--color-warning, #dd6b20) !important;
  background-color: var(--color-background-warning-light, #fffaf0);
  box-shadow: 0 0 0 2px var(--color-warning-semitransparent, rgba(221, 107, 32, 0.35)), 
              var(--shadow-node-selected, 0 4px 12px rgba(0,0,0,0.1)) !important;
}


/* --- Стили для фокуса с клавиатуры --- */
:global(div[data-testid^="rf__node-podGroup_"].selectable:focus:not(:focus-visible)) {
  outline: none !important;
}

:global(div[data-testid^="rf__node-podGroup_"].selectable:focus-visible) {
  outline: 3px solid var(--color-focus-ring, #007AFF) !important; 
  outline-offset: 2px !important;
  box-shadow: var(--shadow-node-default), 0 0 0 3px var(--color-focus-ring-semitransparent, rgba(0,122,255,0.25)) !important;
}

:global(div[data-testid^="rf__node-podGroup_"].selectable.selected:focus-visible) {
  outline-color: var(--color-focus-ring-selected, var(--color-accent-dark, #0052cc)) !important;
  box-shadow: 0 0 0 2px var(--color-accent-semitransparent, rgba(0, 122, 255, 0.35)), 
              var(--shadow-node-selected, 0 4px 12px rgba(0,0,0,0.1)),
              0 0 0 3px var(--color-focus-ring-selected-semitransparent, rgba(0,82,204,0.35)) !important;
}


/* --- Стили для Хэндлов (точек соединения) PodGroup --- */
.nodeBase :global(.react-flow__handle) {
  width: 11px !important;
  height: 11px !important;
  background: var(--color-handle-podgroup, var(--color-accent-dark, #004a8c)) !important; 
  border: 2px solid var(--color-handle-podgroup-border, var(--color-background-node, #ffffff)) !important;
  border-radius: 50%;
  z-index: 10 !important;
  transition: background-color 0.15s ease, border-color 0.15s ease;
}
.nodeBase :global(.react-flow__handle:hover) {
    background-color: var(--color-handle-podgroup-hover, var(--color-accent, #007AFF)) !important;
    border-color: var(--color-background-node-hover, #f0f0f0) !important;
}

.nodeBase :global(.react-flow__handle-top) {}
.nodeBase :global(.react-flow__handle-bottom) {}
