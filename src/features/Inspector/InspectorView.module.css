/* --- Базовые стили Инспектора --- */
.inspectorViewBase {
  color: var(--color-text-primary);
  font-size: 14px;
  height: 100%;
  display: flex;
  flex-direction: column;
  overflow-y: auto;
  padding: calc(var(--spacing-unit) * 2);
  box-sizing: border-box;
  background-color: var(--color-background-app);
}

.inspectorHeader {
  margin: 0 0 calc(var(--spacing-unit) * 2) 0;
  padding-bottom: calc(var(--spacing-unit) * 1.5);
  border-bottom: 1px solid var(--color-border-light);
  font-size: 1.2em;
  font-weight: 600;
  color: var(--color-text-primary);
  flex-shrink: 0;
}

/* --- Плейсхолдер, когда ничего не выбрано --- */
.placeholder {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  color: var(--color-text-placeholder);
  height: 100%;
  padding: calc(var(--spacing-unit) * 3);
  font-size: 0.95em;
  user-select: none;
}

.placeholderIcon {
  width: 56px;
  height: 56px;
  margin-bottom: calc(var(--spacing-unit) * 2);
  opacity: 0.5;
  color: var(--color-text-placeholder);
}

/* --- Секции и блоки --- */
.section {
  margin-bottom: calc(var(--spacing-unit) * 2.5);
}
.section:last-child {
  margin-bottom: 0;
}

.sectionTitle {
  display: block;
  font-weight: 500;
  margin-bottom: var(--spacing-unit);
  color: var(--color-text-secondary);
  font-size: 1.0em;
}

.infoBlock {
  background-color: var(--color-background-panel);
  padding: calc(var(--spacing-unit) * 1.25) calc(var(--spacing-unit) * 1.5);
  border-radius: var(--border-radius-medium, 6px);
  border: 1px solid var(--color-border-medium);
  font-size: 0.9em;
  line-height: 1.6;
  word-break: break-word;
  color: var(--color-text-secondary);
}

.infoBlock strong {
  color: var(--color-text-primary);
  font-weight: 500;
}

.preformattedText {
  composes: infoBlock;
  white-space: pre-wrap;
  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
  font-size: 0.85em;
  background-color: var(--color-background-codeblock, #f0f0f0);
  color: var(--color-text-inverted);
  border-color: transparent;
}

.divider {
  border: 0;
  border-top: 1px solid var(--color-border-light);
  margin: calc(var(--spacing-unit) * 2.5) 0;
}

/* --- Элементы форм --- */
.formLabel {
  display: block;
  margin-bottom: calc(var(--spacing-unit) * 0.75);
  font-weight: 500;
  font-size: 0.9em;
  color: var(--color-text-primary);
}

.formInput,
select.formInput {
  width: 100%;
  padding: calc(var(--spacing-unit) * 1) calc(var(--spacing-unit) * 1.25);
  border: 1px solid var(--color-border-medium);
  border-radius: var(--border-radius-medium, 6px);
  font-size: 0.95em;
  background-color: var(--color-background-panel);
  color: var(--color-text-primary);
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
  box-sizing: border-box;
}
select.formInput {
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%2357606a'%3E%3Cpath d='M8 11.036L2.782 5.482a.748.748 0 00-1.058 0 .756.756 0 000 1.062l5.75 5.772a.748.748 0 001.056 0l5.75-5.772a.756.756 0 000-1.062.748.748 0 00-1.058 0L8 11.036z'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right calc(var(--spacing-unit) * 1.25) center;
  background-size: 16px 16px;
  padding-right: calc(var(--spacing-unit) * 4);
}

.formInput:focus-visible,
select.formInput:focus-visible {
  outline: none;
  border-color: var(--color-border-input-focus, var(--color-accent));
  box-shadow: 0 0 0 3px var(--color-focus-ring, rgba(0, 122, 255, 0.25));
}

.formInputError {
  composes: formInput;
  border-color: var(--color-error, #d73a49) !important;
}
.formInputError:focus-visible {
  border-color: var(--color-error, #d73a49) !important;
  box-shadow: 0 0 0 3px var(--color-focus-ring-error, rgba(215, 58, 73, 0.3)) !important;
}

.formInputErrorSelect {
  composes: formInput;
  border-color: var(--color-error, #d73a49) !important;
}
.formInputErrorSelect:focus-visible {
  border-color: var(--color-error, #d73a49) !important;
  box-shadow: 0 0 0 3px var(--color-focus-ring-error, rgba(215, 58, 73, 0.3)) !important;
}

.errorMessage {
  color: var(--color-error, #d73a49);
  font-size: 0.85em;
  margin-top: calc(var(--spacing-unit) * 0.75);
  display: block;
}

.formCheckboxWrapper {
  display: flex;
  align-items: center;
  margin-bottom: var(--spacing-unit);
  padding: calc(var(--spacing-unit) * 0.5) 0;
  cursor: pointer;
  user-select: none;
  border-radius: var(--border-radius-small);
  transition: background-color 0.15s ease;
}
.formCheckboxWrapper:hover {
  background-color: rgba(0,0,0,0.03);
}

.formCheckbox {
  margin-right: calc(var(--spacing-unit) * 1.25);
  width: 18px;
  height: 18px;
  accent-color: var(--color-accent, #007AFF);
  cursor: pointer;
  flex-shrink: 0;
}
.formCheckbox:focus-visible + .formCheckboxLabel {
}
.formCheckboxLabel {
  font-size: 0.95em;
  color: var(--color-text-primary);
  cursor: pointer;
  line-height: 1.3;
}

/* --- Кнопки --- */
.buttonBase {
  padding: calc(var(--spacing-unit) * 1) calc(var(--spacing-unit) * 1.75);
  border: 1px solid transparent;
  border-radius: var(--border-radius-medium, 6px);
  font-size: 0.95em;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.15s ease, border-color 0.15s ease, color 0.15s ease, box-shadow 0.15s ease, transform 0.05s ease-out;
  text-align: center;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: calc(var(--spacing-unit) * 0.75);
  line-height: 1.4;
  box-sizing: border-box;
  user-select: none;
  text-decoration: none;
}
.buttonBase:active:not(:disabled) {
  transform: translateY(1px);
}
.buttonBase:focus-visible {
  outline: none;
  box-shadow: 0 0 0 3px var(--color-focus-ring, rgba(0, 122, 255, 0.35));
}
.buttonBase:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  background-image: none !important;
}

.buttonPrimary {
  composes: buttonBase;
  background-color: var(--color-accent, #007AFF);
  color: var(--color-text-inverted, white);
  border-color: var(--color-accent, #007AFF);
}
.buttonPrimary:hover:not(:disabled) {
  background-color: var(--color-accent-hover, #0056b3);
  border-color: var(--color-accent-hover, #0056b3);
}

.buttonSecondary {
  composes: buttonBase;
  background-color: var(--color-background-panel, #f0f2f5);
  color: var(--color-text-primary);
  border: 1px solid var(--color-border-medium);
}
.buttonSecondary:hover:not(:disabled) {
  background-color: #e9ecef;
  border-color: var(--color-border-dark);
}

.buttonSuccess {
  composes: buttonBase;
  background-color: var(--color-success, #28a745);
  color: var(--color-text-inverted, white);
  border-color: var(--color-success, #28a745);
}
.buttonSuccess:hover:not(:disabled) {
  background-color: var(--color-success-hover, #218838);
  border-color: var(--color-success-hover, #218838);
}

.buttonDanger {
  composes: buttonBase;
  background-color: var(--color-error, #dc3545);
  color: var(--color-text-inverted, white);
  border-color: var(--color-error, #dc3545);
}
.buttonDanger:hover:not(:disabled) {
  background-color: var(--color-error-hover, #c82333);
  border-color: var(--color-error-hover, #c82333);
}

.buttonSmall {
  padding: calc(var(--spacing-unit) * 0.65) var(--spacing-unit);
  font-size: 0.85em;
  gap: calc(var(--spacing-unit) * 0.5);
}

.buttonBlock {
  width: 100%;
  display: flex;
}
.buttonBlockWithMargin {
  composes: buttonBlock;
  margin-top: var(--spacing-unit);
}


/* --- Стили для отображения и редактирования Labels --- */
.labelsListContainer {
  margin-bottom: calc(var(--spacing-unit) * 1.5);
  max-height: 250px;
  overflow-y: auto;
  border: 1px solid var(--color-border-light);
  padding: var(--spacing-unit);
  border-radius: var(--border-radius-medium);
  background-color: var(--color-background-app);
  display: flex;
  flex-direction: column;
  gap: var(--spacing-unit);
}

.labelEntry {
  display: flex;
  align-items: center;
  gap: var(--spacing-unit);
  padding: calc(var(--spacing-unit) * 0.75);
  border-bottom: 1px solid var(--color-border-light);
  font-size: 0.9em;
  background-color: var(--color-background-panel);
  border-radius: var(--border-radius-small);
}
.labelEntry:last-child {
  border-bottom: none;
}
.labelEntryEditing {
  composes: labelEntry;
  box-shadow: 0 0 0 2px var(--color-accent-light);
}

.labelKey {
  font-weight: 500;
  color: var(--color-text-secondary);
  flex-shrink: 0;
  word-break: break-all;
  margin-right: calc(var(--spacing-unit) * 0.5);
}

.labelValue {
  flex-grow: 1;
  word-break: break-all;
  color: var(--color-text-primary);
  padding: calc(var(--spacing-unit) * 0.5) calc(var(--spacing-unit) * 0.75);
  border-radius: var(--border-radius-small);
}

.labelEntry .formInput {
  flex-grow: 1;
  font-size: 1em;
  padding: calc(var(--spacing-unit) * 0.75) var(--spacing-unit);
}

.labelEditError {
    composes: errorMessage;
    width: 100%;
    text-align: left;
    margin-left: 0;
    margin-top: calc(var(--spacing-unit) * 0.5);
}

.placeholderText {
  font-style: italic;
  color: var(--color-text-placeholder);
  padding: calc(var(--spacing-unit) * 1.5) var(--spacing-unit);
  text-align: center;
  font-size: 0.9em;
  border: 1px dashed var(--color-border-medium);
  border-radius: var(--border-radius-medium);
  background-color: var(--color-background-panel);
}

.addLabelForm {
  margin-top: calc(var(--spacing-unit) * 2);
  padding-top: calc(var(--spacing-unit) * 2);
  border-top: 1px solid var(--color-border-light);
}
.addLabelForm .sectionTitle {
    font-size: 1em;
    margin-bottom: var(--spacing-unit);
}

.addLabelFormRow {
  display: flex;
  gap: var(--spacing-unit);
  align-items: flex-start;
  margin-bottom: var(--spacing-unit);
}
.addLabelFormRow > .formInput,
.addLabelFormRow > .inputWrapperWithError > .formInput {
  flex: 1 1 auto;
  min-width: 100px;
}
.addLabelFormRow > .buttonBase {
  flex-shrink: 0;
  padding-top: calc(var(--spacing-unit) * 1);
  padding-bottom: calc(var(--spacing-unit) * 1);
}
.inputWrapperWithError {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
}

/* --- Стили для Агрегированных Ребер --- */
.aggregatedRuleDetails {
  margin-top: var(--spacing-unit);
  padding-top: var(--spacing-unit);
  border-top: 1px solid var(--color-border-light);
}
.aggregatedRuleDetails .sectionTitle {
    font-size: 1em;
    margin-bottom: var(--spacing-unit);
}
.aggregatedRuleDetails p {
  margin-bottom: var(--spacing-unit);
  font-size: 0.9em;
  color: var(--color-text-secondary);
}

.aggregatedRuleList {
  list-style: none;
  padding-left: 0;
  margin: 0 0 calc(var(--spacing-unit) * 1.5) 0;
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing-unit) * 0.75);
}
.aggregatedRuleButton {
  composes: buttonSecondary;
  width: 100%;
  text-align: left;
  justify-content: flex-start;
  font-weight: normal;
  background-color: var(--color-background-app);
}
.aggregatedRuleButton:hover:not(:disabled) {
  background-color: var(--color-background-panel);
}
.aggregatedRuleButton.active {
  background-color: var(--color-accent-light, #e6f2ff);
  border-color: var(--color-accent, #007AFF);
  color: var(--color-accent-dark, #0056b3);
  font-weight: 500;
}
.aggregatedRuleButton.active:hover:not(:disabled) {
  background-color: #d9e9ff;
}

/* --- Панель ошибок/предупреждений для узла/ребра --- */
.nodeIssuesPanel {
  border-radius: var(--border-radius-medium);
  padding: calc(var(--spacing-unit) * 1.5);
  margin-bottom: calc(var(--spacing-unit) * 2);
}
.nodeIssuesPanel.errorPanel {
  background-color: var(--color-error-light, #ffebee);
  border: 1px solid var(--color-error, #d73a49);
}
.nodeIssuesPanel.warningPanel {
  background-color: var(--color-warning-light, #fffbe6);
  border: 1px solid var(--color-warning, #f5a623);
}

.nodeIssuesPanel .sectionTitle {
  color: var(--color-text-primary);
  margin-bottom: calc(var(--spacing-unit) * 0.75);
}
.nodeIssuesPanel.errorPanel .sectionTitle { color: var(--color-error-dark); }
.nodeIssuesPanel.warningPanel .sectionTitle { color: var(--color-warning-dark); }


.issuesList {
  list-style: none;
  padding-left: 0;
  margin: 0;
}

.issueItem {
  padding: calc(var(--spacing-unit) * 0.5) 0;
  font-size: 0.9em;
  line-height: 1.5;
  display: flex;
  align-items: flex-start;
  gap: calc(var(--spacing-unit) * 0.75);
}

.issueItem::before {
  flex-shrink: 0;
  font-size: 1em;
  line-height: inherit;
  margin-top: 1px;
}

.issueItem.error { color: var(--color-error-dark, #b31d1a); }
.issueItem.error::before { content: "❌"; }

.issueItem.warning { color: var(--color-warning-dark, #7d5f00); }
.issueItem.warning::before { content: "⚠️"; }

.issueFieldInfo {
  font-size: 0.9em;
  color: var(--color-text-placeholder);
  margin-left: var(--spacing-unit);
  font-style: italic;
}

/* --- Стили для RulePortsEditor --- */
.rulePortsEditorContainer {
}

.portProtocolEntry {
  display: grid;
  grid-template-columns: minmax(100px, 1fr) auto auto;
  gap: var(--spacing-unit);
  align-items: flex-start;
  padding: var(--spacing-unit) 0;
  border-bottom: 1px solid var(--color-border-light);
}
.portProtocolEntry:last-of-type {
  border-bottom: none;
}

.portInputWrapper {
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing-unit) * 0.5);
}

.portProtocolEntry .formInput,
.portProtocolEntry .protocolSelect {
  margin-bottom: 0;
}

.protocolSelect {
  composes: formInput;
  min-width: 120px;
}

/* --- Информационное сообщение (используется в RulePortsEditor) --- */
.infoMessage {
  padding: calc(var(--spacing-unit) * 1.25) calc(var(--spacing-unit) * 1.5);
  background-color: var(--color-background-info-light, #e6f7ff);
  border: 1px solid var(--color-border-info, #91d5ff);
  border-radius: var(--border-radius-medium, 6px);
  color: var(--color-text-info, #035388);
  font-size: 0.9em;
  margin: var(--spacing-unit) 0 calc(var(--spacing-unit) * 1.5) 0;
  text-align: center;
  line-height: 1.5;
}