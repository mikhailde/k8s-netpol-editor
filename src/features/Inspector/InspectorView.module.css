/* --- Базовые стили Инспектора --- */
.inspectorViewBase {
  color: var(--color-text-primary);
  font-size: 0.9em;
  height: 100%;
  display: flex;
  flex-direction: column;
  overflow-y: auto;
  padding-right: calc(var(--spacing-unit) * 0.5);
}

.inspectorHeader {
  margin: 0;
  padding-bottom: calc(var(--spacing-unit) * 1.5);
  margin-bottom: calc(var(--spacing-unit) * 2);
  border-bottom: 1px solid var(--color-border-light);
  font-size: 1.15em;
  font-weight: 600;
  color: var(--color-text-primary);
  flex-shrink: 0;
}

.placeholder {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  color: var(--color-text-placeholder);
  height: 100%;
  padding: calc(var(--spacing-unit) * 3);
  font-size: 0.95em;
}

.placeholderIcon {
  width: 48px;
  height: 48px;
  margin-bottom: calc(var(--spacing-unit) * 2);
  opacity: 0.6;
}

/* --- Секции и блоки --- */
.section {
  margin-bottom: calc(var(--spacing-unit) * 2);
}

.sectionTitle {
  display: block;
  font-weight: 600;
  margin-bottom: calc(var(--spacing-unit) * 0.75);
  color: var(--color-text-secondary);
  font-size: 0.95em;
}

.infoBlock {
  background-color: var(--color-background-app);
  padding: calc(var(--spacing-unit) * 1.25);
  border-radius: 6px;
  border: 1px solid var(--color-border-light);
  font-size: 0.9em;
  line-height: 1.6;
  word-break: break-word;
}

.infoBlock strong {
  color: var(--color-text-primary);
}

.preformattedText {
  composes: infoBlock;
  white-space: pre-wrap;
  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
  font-size: 0.85em;
  background-color: var(--color-background-codeblock, #f0f0f0);
  padding: var(--spacing-unit);
}

.divider {
  border: 0;
  border-top: 1px solid var(--color-border-light);
  margin: calc(var(--spacing-unit) * 2) 0;
}

/* --- Элементы форм --- */
.formLabel {
  display: block;
  margin-bottom: calc(var(--spacing-unit) * 0.5);
  font-weight: 500;
  font-size: 0.85em;
  color: var(--color-text-secondary);
}

.formInput {
  width: 100%;
  padding: calc(var(--spacing-unit) * 0.9) calc(var(--spacing-unit) * 1.25);
  border: 1px solid var(--color-border-medium);
  border-radius: 6px;
  font-size: 0.9em;
  background-color: var(--color-background-panel);
  color: var(--color-text-primary);
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
  box-sizing: border-box;
}

.formInput:focus {
  outline: none;
  border-color: var(--color-accent, #007AFF);
  box-shadow: 0 0 0 2px var(--color-focus-ring-input, rgba(0, 122, 255, 0.2));
}

.formInputError {
  composes: formInput;
  border-color: var(--color-error, #d73a49) !important;
  box-shadow: 0 0 0 2px var(--color-focus-ring-error, rgba(215, 58, 73, 0.2)) !important;
}
.formInputError:focus {
  border-color: var(--color-error, #d73a49) !important;
  box-shadow: 0 0 0 2px var(--color-focus-ring-error-focused, rgba(215, 58, 73, 0.3)) !important;
}

.errorMessage {
  color: var(--color-error, #d73a49);
  font-size: 0.8em;
  margin-top: calc(var(--spacing-unit) * 0.5);
  display: block;
}

.formCheckboxWrapper {
  display: flex;
  align-items: center;
  margin-bottom: calc(var(--spacing-unit) * 0.75);
  cursor: pointer;
  user-select: none;
}

.formCheckbox {
  margin-right: var(--spacing-unit);
  width: 16px;
  height: 16px;
  accent-color: var(--color-accent, #007AFF);
  cursor: pointer;
}
.formCheckboxLabel {
  font-size: 0.9em;
  color: var(--color-text-primary);
  cursor: pointer;
}

/* --- Кнопки --- */
.buttonBase {
  padding: calc(var(--spacing-unit) * 0.9) calc(var(--spacing-unit) * 1.8);
  border: 1px solid transparent;
  border-radius: 6px;
  font-size: 0.9em;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.2s ease, border-color 0.2s ease, opacity 0.2s ease;
  text-align: center;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-unit);
  line-height: 1.2;
  box-sizing: border-box;
}
.buttonBase:focus-visible {
  outline: none;
  box-shadow: 0 0 0 3px var(--color-focus-ring-button, rgba(0, 122, 255, 0.35));
}
.buttonBase:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  background-image: none !important;
}

.buttonPrimary {
  composes: buttonBase;
  background-color: var(--color-accent, #007AFF);
  color: white;
  border-color: var(--color-accent, #007AFF);
}
.buttonPrimary:hover:not(:disabled) {
  background-color: var(--color-accent-hover, #0056b3);
  border-color: var(--color-accent-hover, #0056b3);
}

.buttonSecondary {
  composes: buttonBase;
  background-color: var(--color-background-button-secondary, #f0f2f5);
  color: var(--color-text-button-secondary, var(--color-text-primary));
  border: 1px solid var(--color-border-button-secondary, var(--color-border-medium));
}
.buttonSecondary:hover:not(:disabled) {
  background-color: var(--color-background-button-secondary-hover, #e4e6eb);
  border-color: var(--color-border-button-secondary-hover, #adb5bd);
}

.buttonSuccess {
  composes: buttonBase;
  background-color: var(--color-success, #28a745);
  color: white;
  border-color: var(--color-success, #28a745);
}
.buttonSuccess:hover:not(:disabled) {
  background-color: var(--color-success-hover, #218838);
  border-color: var(--color-success-hover, #218838);
}

.buttonDanger {
  composes: buttonBase;
  background-color: var(--color-error, #dc3545);
  color: white;
  border-color: var(--color-error, #dc3545);
}
.buttonDanger:hover:not(:disabled) {
  background-color: var(--color-error-hover, #c82333);
  border-color: var(--color-error-hover, #c82333);
}

.buttonSmall {
  padding: calc(var(--spacing-unit) * 0.5) var(--spacing-unit);
  font-size: 0.8em;
}

.buttonBlock {
  width: 100%;
  display: block; 
}
.buttonBlockWithMargin {
  composes: buttonBlock;
  margin-top: var(--spacing-unit);
}


/* --- Стили для отображения и редактирования Labels --- */
.labelsListContainer {
  margin-bottom: calc(var(--spacing-unit) * 1.5);
  max-height: 200px;
  overflow-y: auto;
  border: 1px solid var(--color-border-light);
  padding: var(--spacing-unit);
  border-radius: 6px;
  background-color: var(--color-background-app);
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing-unit) * 0.75);
}

.labelEntry {
  display: flex;
  align-items: center;
  gap: var(--spacing-unit);
  padding-bottom: calc(var(--spacing-unit) * 0.75);
  border-bottom: 1px dashed var(--color-border-very-light, #e1e4e8);
  font-size: 0.9em;
}
.labelEntry:last-child {
  border-bottom: none;
  padding-bottom: 0;
}

.labelKey {
  font-weight: 500;
  color: var(--color-text-secondary);
  flex-shrink: 0;
  word-break: break-all;
  margin-right: calc(var(--spacing-unit) * 0.5);
}

.labelValue {
  flex-grow: 1;
  word-break: break-all;
  background-color: var(--color-background-panel);
  padding: calc(var(--spacing-unit) * 0.5) calc(var(--spacing-unit) * 0.75);
  border-radius: 4px;
  color: var(--color-text-primary);
}
.labelEntry .formInput {
  flex-grow: 1;
}

.labelEditError {
    composes: errorMessage;
    width: 100%;
    text-align: left;
    margin-left: 0;
}

.placeholderText {
  font-style: italic;
  color: var(--color-text-placeholder);
  margin: var(--spacing-unit) 0;
  font-size: 0.9em;
  padding: var(--spacing-unit);
  text-align: center;
}

.addLabelForm {
  margin-top: calc(var(--spacing-unit) * 1.5);
  padding-top: calc(var(--spacing-unit) * 1.5);
  border-top: 1px solid var(--color-border-light);
}
.addLabelForm .sectionTitle {
    font-size: 1em;
    margin-bottom: var(--spacing-unit);
}
.addLabelForm > div {
  margin-bottom: var(--spacing-unit);
  display: flex;
  gap: var(--spacing-unit);
  align-items: flex-start;
}
.addLabelForm .formInput {
  flex-grow: 1;
}

/* --- Стили для Агрегированных Ребер --- */
.aggregatedRuleDetails {
  margin-top: var(--spacing-unit);
  padding-top: var(--spacing-unit);
  border-top: 1px solid var(--color-border-light);
}
.aggregatedRuleDetails .sectionTitle {
    font-size: 1em;
    margin-bottom: var(--spacing-unit);
}
.aggregatedRuleDetails p {
  margin-bottom: var(--spacing-unit);
  font-size: 0.9em;
  color: var(--color-text-secondary);
}
.aggregatedRuleList {
  list-style: none;
  padding-left: 0;
  margin: 0 0 calc(var(--spacing-unit) * 1.5) 0;
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing-unit) * 0.75);
}
.aggregatedRuleButton {
  composes: buttonSecondary;
  width: 100%;
  text-align: left;
  justify-content: flex-start;
  font-weight: normal;
}
.aggregatedRuleButton.active {
  background-color: var(--color-accent-light, #e6f2ff);
  border-color: var(--color-accent, #007AFF);
  color: var(--color-accent-dark, #0056b3);
  font-weight: 500;
}
.aggregatedRuleButton.active:hover:not(:disabled) {
  background-color: var(--color-accent-light-hover, #d9e9ff);
}

/* --- Панель ошибок/предупреждений для узла/ребра --- */
.nodeIssuesPanel {
  background-color: var(--color-background-panel-alt, var(--color-background-app));
  border: 1px solid var(--color-border-light);
  border-radius: 6px;
  padding: calc(var(--spacing-unit) * 1.25);
  margin-bottom: calc(var(--spacing-unit) * 1.5);
}

.issuesList {
  list-style: none;
  padding-left: 0;
  margin: 0;
}

.issueItem {
  padding: calc(var(--spacing-unit) * 0.5) 0;
  font-size: 0.85em;
  line-height: 1.4;
  display: flex;
  align-items: flex-start;
}

.issueItem::before {
  margin-right: calc(var(--spacing-unit) * 0.75);
  font-size: 1.1em;
  line-height: inherit;
}

.issueItem.error {
  color: var(--color-error, #d73a49);
}
.issueItem.error::before {
  content: "❌"; 
}

.issueItem.warning {
  color: var(--color-warning-dark, #b08800);
}
.issueItem.warning::before {
  content: "⚠️";
}

.issueFieldInfo {
  font-size: 0.9em;
  color: var(--color-text-placeholder);
  margin-left: var(--spacing-unit);
  font-style: italic;
}

/* --- Стили для RulePortsEditor --- */
.rulePortsEditorContainer {
}

.portProtocolEntry {
  display: grid;
  grid-template-columns: minmax(120px, 1fr) auto auto;
  gap: var(--spacing-unit);
  align-items: flex-start;
  padding-bottom: calc(var(--spacing-unit) * 1.5);
  margin-bottom: calc(var(--spacing-unit) * 1.5);
  border-bottom: 1px dashed var(--color-border-very-light, #e1e4e8);
}
.portProtocolEntry:last-of-type {
  margin-bottom: 0;
  padding-bottom: 0;
  border-bottom: none;
}

.portInputWrapper {
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing-unit) * 0.5);
}

.protocolSelect {
  min-width: 100px;
}